// FLEXBOX SCALABLE
// Flexbox display
@mixin flexbox() {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -ms-flex: $values;
  flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -ms-flex-flow: $flow;
  flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -ms-flex-grow: $grow;
  flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
  -ms-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  -ms-flex-basis: $width;
  flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  justify-content: $justify;
  -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  -ms-align-content: $align;
  align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -ms-flex-align: $align;
  align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  -ms-align-self: $align;
  align-self: $align;
}

@mixin flexbox-center {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
}

// Scalable Padding

// Shorthand Padding

@mixin xy-padding($y-axis: null, $x-asix: null) {
  padding: $y-axis $x-asix;
}

// Scalable Margin
@mixin margin($top: null, $right: null, $bottom: null, $left: null) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

// ********************************
// Dynamic Position

@mixin media-query-min($size) {
  @media screen and (min-width: $size) {
    @content;
  }
}

@mixin media-query-max($size) {
  @media screen and (max-width: $size) {
    @content;
  }
}

// Fonts

@mixin heading($color: null) {
  color: $color;
  line-height: 1.3;
  font-weight: 500;
  padding: 5px 0 12px;
}

// button
@mixin btn(
  $color: #fff,
  $text-transform: uppercase,
  $border-color: transparent,
  $min-width: 140px,
  $background: $greenise
) {
  display: inline-block;
  background: $background;
  color: $color;
  text-align: center;
  font-weight: 600;
  text-transform: $text-transform;
  line-height: 100%;
  @include xy-padding(12px, 25px);
  min-width: $min-width;
  // border: 1px solid $border-color;
  border-radius: 3px;
  cursor: pointer;
  transition: all 0.3s ease-out;
}
